# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Release
      uses: qcastel/github-actions-maven-release@master
      with:
        release-branch-name: "main"

        git-release-bot-name: "adam-ht"
        git-release-bot-email: "todomek1234@gmail.com"

        access-token: ${{ secrets.ACCESS_TOKEN }}
        maven-repo-server-id: ${MAVEN_SERVER_ID}
        maven-repo-server-username: adam-ht
        maven-repo-server-password: ${{ secrets.ACCESS_TOKEN }}
        maven-release-args: "-Dskip.unit.tests=true -Dskip.integration.tests=true"

    - name: Maven release (fork)
      # You may pin to the exact commit or the version.
      # uses: MiniDigger/github-actions-maven-release@191b715b12d345b172e3b85dc865ff12d44695e6
      uses: MiniDigger/github-actions-maven-release@v1.10.2
      with:
        # Filter the branch to execute the release on
        release-branch-name: main
        # Enable gpg signing
        #gpg-enabled: # optional
        # The GPG key ID
        #gpg-key-id: # optional
        # The GPG key
        #gpg-key: # optional
        # The maven local repository path
        #maven-local-repo-path: # optional, default is $M2_HOME/repository
        # Maven server repository id to push the artefacts to
        maven-repo-server-id: github
        # Maven server repository username
        maven-repo-server-username: adam-ht
        # Maven server repository password
        #maven-repo-server-password: 
        # The maven arguments for the release
        #maven-args: # optional, default is 
        # The git user name for commiting the release
        git-release-bot-name: adam-ht
        # The git user email for commiting the release
        git-release-bot-email: todomek1234@gmail.com
        # Github access token. https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
        access-token: ${{ secrets.ACCESS_TOKEN }}
