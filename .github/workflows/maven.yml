# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Maven Jar Publish
      # You may pin to the exact commit or the version.
      # uses: eric2788/maven-jar-publish@dc4d9b863c487cf71fd834b0e74444e443633256
      uses: eric2788/maven-jar-publish@v3
      #with:
        # the java version to build (if not provied, it will use the ${ maven.compiler.target } properties
        #java-version: 
        # the location of pom.xml (to build)
        #locate: # optional, default is .
        # the module path that to upload the artifact. (the module name must same as the module path)
        #upload-module: # optional, default is .
        # The release content
        #body: # optional
        # The release content by file (if specificed then body will be ignored)
        #body-path: # optional
        # whether the release is draft
        #draft: # optional
        # whether the release is pre-release
        #pre-release: # optional
              
